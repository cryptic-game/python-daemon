name: Docker Build

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
    branches: [ master ]
    paths-ignore: [ '**.md' ]
  workflow_dispatch:

env:
  DOCKER_PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8 #linux/s390x,linux/ppc64le

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Create Version
        id: prepare
        run: |
          set -x
          VERSION=edge
          IMAGE_NAME=crypticcp/python-daemon
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="$IMAGE_NAME:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS $IMAGE_NAME:latest"
          fi
          echo ::set-output name=image::${TAGS}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ${{ steps.prepare.outputs.image }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          file: Dockerfile
          context: .

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.prepare.outputs.image }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          file: Dockerfile
          context: .

      - name: Clear
        if: always()
        run: rm -f ${HOME}/.docker/config.json
